#+TITLE: Sqlite Api
#+AUTHOR: Wei Sun (孙伟)
#+EMAIL: wei.sun@spreadtrum.com
* Sqlite Api
** sqlite3_open
** sqltie3_prepare_v2
** sqlite3_step
** sqlite3_reset
** sqlite3_bind
** sqlite3_exec
** sqlite3_get_tables
** sqlite3_mprintf
** sqlite3_commit_hook
** sqlite3_rollback_hook
** sqlite3_busy_handler
** sqlite3_busy_timeout
** sqlite3_trace
** sqlite3_finalize
在 auto-commit 模式下, sqlite3_finalize 相当于 commit 的作用:
- 释放锁
- sync 日志与数据库
** extension api
*** user defined functions
sqlite3_create_funtion
*** user defined aggregates
*** user define collations
sqlite3_create_collation
** sample code
#+BEGIN_SRC c
  #include <sqlite3.h>
  #include <pthread.h>

  void query(sqlite3 * db) {
      sqlite3_stmt *stmt;
      const char * tail;
      int rc=sqlite3_prepare_v2(db,"select * from test", -1, &stmt, &tail);
      if (rc!=SQLITE_OK) {
          fprintf("error prepare stmt: %s", sqlite3_errmsg(db));
          exit (1);
      }
      int count=0;
      rc=sqlite3_step(stmt);
      while (rc==SQLITE_ROW) {
          count++;
          rc=sqlite3_step(stmt);
      }
      sqlite3_finalize(stmt);
      printf("query returns %d\n",count);
  }

  void * fun(void * args) {
      query((sqlite3 *)args);
  }


  int main(int argc, char *argv[]) {
      sqlite3_config(SQLITE_CONFIG_SERIALIZED);
      /* sqlite3_enable_shared_cache(SQLITE_OPEN_SHAREDCACHE); */
      sqlite3 *db;
      sqlite3 *db2;

      int rc=sqlite3_open_v2("/home/sunway/test.db", &db, SQLITE_OPEN_READWRITE, 0);

      if (rc) {
          printf("can't open db: %s",sqlite3_errmsg(db));
          sqlite3_close(db);
          exit(1);
      }

      pthread_t tid;
      pthread_create(&tid, NULL, fun, db);

      query(db);
      pthread_join(tid, NULL);
      /* char * sql="insert into test values (\"test\",1)"; */
      /* char * zerr; */
      /* rc=sqlite3_exec(db,sql,0,0,&zerr); */
      /* if (rc!=SQLITE_OK) { */
      /*  printf("error when insert: %s", zerr); */
      /*  exit (1); */
      /* } */
      return 0;
  }

#+END_SRC
