
* Calendar Sync Issue
exchange同步calendar 涉及三个APP: exchange, email provider, calendar provider
** 一次完整的sync过程
- 用户request sync
- exchange的syncAdapter查找email:account.tbl, 找到对应的account\_id
- exchange根据account\_id查找email:mailbox.tbl, 找到所有type为65(calendar)的
  mailbox, 例如:

| id | displayName | serverId      |      syncKey |     syncTime | ... |
|----+-------------+---------------+--------------+--------------+-----|
|  3 | a@gmail.com | Event:DEFAULT | 335495973024 | 335505382850 | ... |
|    |             |               |              |              |     |

其中,Event:DEFAULT应该就是指默认calendar, syncKey可能是用来同步这个calendar的
token. 在现在的代码和数据看来, 该表只会有一条对应于Event:DEFAULT的mailbox记录[fn:1]

- exchange根据查找到的mailbox, 到calendar:calendars.tbl中查找对应于mailbox的本地
  的calendar, 例如
| id | account\_name | account\_type         | calendar\_display\_name | ... |
|----+--------------+----------------------+-----------------------+-----|
|  2 | a@gmail.com  | com.android.exchange | a@gmail.com           | ... |

如果 (mailbox.displayName==calendar.account\_name),mailbox与calendar就认为是对应
的.[fn:2]

- 找到对应的calendar记录后, 即可同步本地calendar与远程 google calendar

** 如何支持sub calendar
- 需要exchange服务器能返回服务器上的sub calendar列表, 然后我们可以将其保存在
  email:mailbox.tbl中, 例如:

| id | displayName | serverId      |      syncKey |     syncTime | ... |
|----+-------------+---------------+--------------+--------------+-----|
|  3 | a@gmail.com | Event:DEFAULT | 335495973024 | 335505382850 | ... |
|  4 | a@gmail.com | Event:Test    | 123456564556 | 124353454355 | ... |

- exchange根据mailbox查找本地calendar时, 需要使用 serverId 来查找, 相应的,
  calendar:calendars.tbl 中也应该有对应的字段, 例如:
  
| id | account\_name | account\_type         | calendar\_display\_name | ... | cal\_sync1     |
|----+--------------+----------------------+-----------------------+-----+---------------|
|  2 | a@gmail.com  | com.android.exchange | Default Calendar      | ... | Event:DEFAULT |
|  3 | a@gmail.com  | com.android.exchange | Test Calendar         | ... | Event:Test    |

- ...
- 关键需要了解Exchange Active Sync协议

** (updated!) Exchange ActiveSync (EAS) 
添加帐户时client会使用 Exchange ActiveSync 协议 (EAS) 与 server 交互

EAS 是一个基于http/xml的协议

*** client向server发送一个 FolderSync 命令
#+begin_src xml
  <FolderSync>
    <FolderSyncKey>
      0
    </FolderSyncKey>
  </FolderSync>
#+end_src
*** server 返回所有 folder
#+begin_src xml
  <FolderSync>
    <FolderStatus>
      FolderStatus: 1
    </FolderStatus>
    <FolderSyncKey>
      FolderSyncKey: 1336382844217
    </FolderSyncKey>
  
    <Changes>
      <!-- there are 11 folders -->
      <Count>
        Count: 11
      </Count>
      <!-- add folder: Contact:DEFAULT -->
      <FolderAdd>
        <FolderServerId>
          FolderServerId: Contact:DEFAULT
        </FolderServerId>
        <FolderParentId>
          FolderParentId: 0
        </FolderParentId>
        <FolderDisplayName>
          FolderDisplayName: Contacts
        </FolderDisplayName>
        <!-- 9 means folder type is CONTACT -->
        <Type>
          Type: 9
        </Type>
      </FolderAdd>
      <!-- add folder for Event:DEFAULT (main calendar) -->
      <FolderAdd>
        <FolderServerId>
          FolderServerId: Event:DEFAULT
        </FolderServerId>
        <FolderParentId>
          FolderParentId: 0
        </FolderParentId>
        <FolderDisplayName>
          FolderDisplayName: sunwayforever@gmail.com
        </FolderDisplayName>
        <!-- 8 means folder type is CALENDAR -->
        <Type>
          Type: 8
        </Type>
      </FolderAdd>
      <!-- add folder for mail -->
      <FolderAdd>
        <FolderServerId>
          FolderServerId: Mail:^sync_gmail_group
        </FolderServerId>
        <FolderParentId>
          FolderParentId: 0
        </FolderParentId>
        <FolderDisplayName>
          FolderDisplayName: [Gmail]
        </FolderDisplayName>
        <Type>
          Type: 12
        </Type>
      </FolderAdd>
      <!-- more folder will be added -->
      <!-- .... -->
    </Changes>
  </FolderSync>
#+end_src
虽然 google calendar 里有多个 calendar, 但 server 只返回了一个 Event:DEFAULT
folder, 所以我们无法获得 default calendar 之外的其他 calendar.
*** client 对每一个 folder 发送 sync 命令
例如, client 对 main calendar 发送 sync 命令
#+begin_src xml
  <Sync>
    <Collections>
      <Collection>
        <SyncKey>
          0
        </SyncKey>
        <CollectionId>
          Event:DEFAULT
        </CollectionId>
        <WindowSize>
          5
        </WindowSize>
      </Collection>
    </Collections>
  </Sync>
#+end_src
*** server 返回calendar的信息
#+begin_src xml
  <Sync>
    <Collections>
      <Collection>
        <Class>
          Class: Calendar
        </Class>
        <SyncKey>
          SyncKey: 1336382856462:
        </SyncKey>
        <CollectionId>
          CollectionId: Event:DEFAULT
        </CollectionId>
        <Status>
          Status: 1
        </Status>
        <MoreAvailable/>
        <Commands>
          <Add>
            <ServerId>
              ServerId: b91f9381-2e7c-4f28-aa92-3b49b84a84cb
            </ServerId>
            <ApplicationData>
              <!-- data about the event -->
            </ApplicationData>
          </Add>
          <!-- more commands -->
        </Commands>
      </Collection>
    </Collections>
  </Sync>
#+end_src
** (updated!) Next Step ...
1. 由于 google calendar 有专门的 RESTful api,且该 api 完全支持多个 calendar, 所以
   有可能参考机不是使用的 EAS 协议 , 而是使用的 RESTful api. (这种可能性好像不是
   很大...)
2. 参考机可能还是使用 EAS 协议, 但有可能通过特定的 http 头使 google server对它的请求
   特殊处理? 猜测 client 特殊标识可能写在 http 头中,是因为 EAS folderSync 命令的
   schema 中没有提到任何额外的参数
   
   
以上的猜测实际上难以在参考机验证, 因为:
   1. 没有 root 权限,无法抓包
   2. google calendar 使用 ssl, 即使抓到包也无法解析.
   
我只能想到一个可能的解决方法:
   1. 架设一个支持 http CONNECT 的代理
   2. client 通过该代理访问 google
   3. 在代理上抓包并让 wireshark 使用代理服务器的私钥解析抓到的包 ... 

** Footnotes
[fn:1] 这里表明exchange app 无法支持 sub calendar
[fn:2] 进一步表明 exchange app 无法支持 sub calendar

 
